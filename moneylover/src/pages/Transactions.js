import React, { useEffect, useState } from "react";
import TransactionList from "../components/TransactionList";
import ExpenseForm from "../components/ExpenseForm";
import { getWallets, getExpenses, createExpense } from "../services/api";
import "../pages/page.css";

const Transactions = () => {
  const [wallets, setWallets] = useState([]);
  const [expenses, setExpenses] = useState([]);
  const [showForm, setShowForm] = useState(false); // Hi·ªÉn th·ªã form nh·∫≠p giao d·ªãch
  const [quickTransaction, setQuickTransaction] = useState(""); // L∆∞u gi√° tr·ªã input giao d·ªãch nhanh

  // L·∫•y danh s√°ch v√≠
  const fetchWallets = async () => {
    try {
      const res = await getWallets();
      console.log("üìå Danh s√°ch v√≠ nh·∫≠n ƒë∆∞·ª£c:", res.data);
      setWallets(res.data);
    } catch (err) {
      console.error("‚ùå L·ªói khi l·∫•y v√≠:", err);
    }
  };

  // L·∫•y danh s√°ch giao d·ªãch
  const fetchExpenses = async () => {
    try {
      const res = await getExpenses();
      console.log("üìå Danh s√°ch giao d·ªãch nh·∫≠n ƒë∆∞·ª£c:", res.data);
      setExpenses(res.data);
    } catch (err) {
      console.error("‚ùå L·ªói khi l·∫•y giao d·ªãch:", err);
    }
  };

  // G·ªçi API khi component ƒë∆∞·ª£c render
  useEffect(() => {
    fetchWallets();
    fetchExpenses();
  }, []);

  // X·ª≠ l√Ω t·∫°o giao d·ªãch nhanh t·ª´ input
  const handleQuickTransaction = async () => {
    if (!quickTransaction) return;

    try {
      const data = {
        title: quickTransaction,
        amount: 0, // C√≥ th·ªÉ th√™m logic ƒë·ªÉ ng∆∞·ªùi d√πng nh·∫≠p s·ªë ti·ªÅn
        date: new Date().toISOString().split("T")[0], // Ng√†y hi·ªán t·∫°i
        category_id: 1, // M·∫∑c ƒë·ªãnh category_id (c√≥ th·ªÉ th√™m logic ƒë·ªÉ ch·ªçn)
        wallet_id: 1, // M·∫∑c ƒë·ªãnh wallet_id (c√≥ th·ªÉ th√™m logic ƒë·ªÉ ch·ªçn)
      };
      await createExpense(data);
      setQuickTransaction(""); // Reset input
      fetchExpenses(); // C·∫≠p nh·∫≠t danh s√°ch giao d·ªãch
    } catch (err) {
      console.error("‚ùå L·ªói khi t·∫°o giao d·ªãch nhanh:", err);
    }
  };

  // X·ª≠ l√Ω t·∫°o giao d·ªãch t·ª´ form
  const handleCreateExpense = (data) => {
    const formattedData = {
      title: data.title,
      amount: parseFloat(data.amount),
      date: data.date,
      category_id: parseInt(data.category_id),
      wallet_id: parseInt(data.wallet_id),
    };
    createExpense(formattedData)
      .then(() => {
        fetchExpenses(); // C·∫≠p nh·∫≠t danh s√°ch giao d·ªãch
        setShowForm(false); // ·∫®n form sau khi t·∫°o
      })
      .catch((err) => console.error("‚ùå L·ªói khi t·∫°o giao d·ªãch:", err));
  };

  return (
    <div className="app-container">
      <header className="app-header">
        <div
          className="header-title"
          style={{
            backgroundColor: "gray",
            width: "100%",
            height: "110px",
            display: "flex",
            flexDirection: "column",
            justifyContent: "center",
            alignItems: "center",
            textAlign: "center",
          }}
        >
          <h1 style={{ margin: "0px" }}>Money lover fake</h1>
          <p>Fake nh∆∞ng thu chi l√† chu·∫©n</p>
        </div>
      </header>

      <section className="wallet-section">
        <h2>V√≠ c·ªßa b·∫°n</h2>
        <div className="wallet-container">
          {wallets.map((wallet) => (
            <div key={wallet.id} className="wallet-card">
              <p className="header">{wallet.name}</p>
              <p>Hi·ªán c√≥: ${wallet.balance}</p>
            </div>
          ))}
        </div>
      </section>

      <section className="transaction-section">
        <h2>Giao d·ªãch</h2>
        <div className="transaction-input">
          <input
            type="text"
            placeholder="H√¥m nay b·∫°n ti√™u g√¨ ü§ëü§î?"
            value={quickTransaction}
            onChange={(e) => setQuickTransaction(e.target.value)}
          />
          <button onClick={handleQuickTransaction}>G·ª≠i</button>
        </div>
        <div className="transaction-buttons">
          <button className="primary" onClick={() => setShowForm(true)}>
            Nh·∫≠p giao d·ªãch m·ªõi
          </button>
          <button onClick={fetchExpenses}>Xem t·∫•t c·∫£ giao d·ªãch</button>
        </div>
        {showForm && (
          <div className="modal">
            <div className="modal-content">
              <button onClick={() => setShowForm(false)}>ƒê√≥ng</button>
              <ExpenseForm onSubmit={handleCreateExpense} />
            </div>
          </div>
        )}
        <TransactionList expenses={expenses} />
      </section>
    </div>
  );
};

export default Transactions;